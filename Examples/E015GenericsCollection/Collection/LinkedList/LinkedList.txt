LinkedList

Обобщенный класс LinkedList<E> представляет структуру данных в виде связанного списка. Он наследуется от класса AbstractSequentialList и реализует интерфейсы List, Dequeue и Queue. То есть он соединяет функциональность работы со списком и фукциональность очереди.

Класс LinkedList имеет следующие конструкторы:
    LinkedList(): создает пустой список

    LinkedList(Collection<? extends E> col): создает список, в который добавляет все элементы коллекции col

LinkedList содержит все те методы, которые определены в интерфейсах List, Queue, Deque. Некоторые из них:

    addFirst() / offerFirst(): добавляет элемент в начало списка

    addLast() / offerLast(): добавляет элемент в конец списка

    removeFirst() / pollFirst(): удаляет первый элемент из начала списка

    removeLast() / pollLast(): удаляет последний элемент из конца списка

    getFirst() / peekFirst(): получает первый элемент

    getLast() / peekLast(): получает последний элемент

Рассмотрим применение связанного списка:
LinkedListNew1.java

Здесь создаются и используются два списка: для строк и для объектов класса Person. П
ри этом в дополнение к методам addFirst/removeLast и т.д.,
нам также доступны стандартные методы, определенные в интерфейсе Collection:
add(), remove, contains, size и другие.
Поэтому мы можем использовать разные методы для одного и того же действия.
Например, добавление в самое начало списка можно сделать так:
states.addFirst("Spain");, а можно сделать так: states.add(0, "Spain");




